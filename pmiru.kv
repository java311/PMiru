#:kivy 1.4.0

<CameraScreen>:
    FloatLayout: 
        Image:
            id: cam_img
            size: root.size
        ActionButton:
            icon: "camera_red.png"
            size_hint: 0.15, 0.15
            pos_hint: {"x": 0.5, 'down':0.5}
            on_release: root.shoot_release()
        ActionButton:
            icon: "config_red.png"
            size_hint: 0.15, 0.15
            pos_hint: {"right": 1, 'top':1}
            on_release: root.screen_change('config')
        ActionButton:
            icon: "flower_red.png"
            size_hint: 0.15, 0.15
            pos_hint: {"right": 0.15, 'top':1}
            on_release: root.screen_change('viewer')
        ActionButton:
            icon: 'exit_red.png'
            size_hint: 0.13, 0.13
            pos_hint: {"x": 0, 'down':0.9}
            on_release: root.exit_press()

<ViewerScreen>:
    FloatLayout:
        Image:
            id: viewer_img
            size: root.size
        ActionButton:
            text: 'Back'
            icon: 'left_red.png'
            size_hint: 0.15, 0.15
            pos_hint: {"left": 0, 'top':0.5}
            on_release: root.viewerBack_release()
        ActionButton:
            text: 'Next'
            icon: 'right_red.png'
            size_hint: 0.15, 0.15
            pos_hint: {"right":1, 'top':0.5}
            on_release: root.viewerNext_release()
        ActionButton:
            text: 'Back to Camera'
            icon: 'camera_red.png'
            size_hint: 0.15, 0.15
            pos_hint: {"right":1, 'top':0.15}
            on_release: root.manager.current = 'camera'
        ActionButton:
            text: 'Layer Down'
            icon: 'layers_red_down.png'
            size_hint: 0.15, 0.15
            pos_hint: {"x": 0.5, 'down':0.5}
            on_release: root.viewerLayerDown_release()
        ActionButton:
            text: 'Layer Up'
            icon: 'layers_red_up.png'
            size_hint: 0.15, 0.15
            pos_hint: {"x":0.5, 'top':1}
            on_release: root.viewerLayerUp_release()
        Label:
            id: layer_txt
            text: 'Layer 0 of 0'
            color: 1, 0, 0, 1 #red
            size_hint: 0.1, 0.1
            font_size: '15sp'
            pos_hint: {"x":0.8, 'top':1}
        Label:
            id: cube_txt
            text: '0/0'
            color: 1, 0, 0, 1 #red
            size_hint: 0.1, 0.1
            font_size: '20sp'
            pos_hint: {"x":0.9, 'top':0.6}
        

<ConfigScreen>:
    BoxLayout:
        orientation: 'vertical'
        font_size: '25dp'
        BoxLayout:
            orientation: 'horizontal'
            Label:
                color: 1, 0, 0, 1 #red
                text: 'Exposure'
                font_size: '25dp'
            TextInput: 
                id: exp_txt
                text: str(int(exp_slider.value))
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                disabled: True
                multiline: False
                value: 5
            Label:
                id: exp_range_label
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                text: 'ms'
            Button:
                id: exp_up
                text:'Up'
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                disabled: True
                on_press: root.exposureUp_press()
            Button:
                id: exp_down
                text:'Down'
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                disabled: True
                on_press: root.exposureDown_press()
            Button: 
                id: exp_auto
                text: 'Auto ON'
                opacity: 0.5
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                # on_active: root.autoExposure_click(self, self.active) 
                on_press: root.autoExposure_click(self)
            #Label:
            #    text_size: None, None
            #    text_size: self.size
            #    font_size: '25dp'
            #    pos_hint: {'center_y': 0.9}
            #    size: self.texture_size
            #    color: 1, 0, 0, 1 #red
            #    text: 'Auto'
        BoxLayout:
            orientation: 'horizontal'
            Slider:
                id: exp_slider
                disabled: True
                min: 1
                max: 1000
                step: 1
                value: 50
                orientation: 'horizontal'
                # on_value:label2.text = str(int(self.value))
                on_value: root.updateExpSlider(self, self.value)
        BoxLayout:
            orientation: 'horizontal'
            Label:
                color: 1, 0, 0, 1 #red
                text: 'Gain'
                font_size: '25dp'
            TextInput: 
                id: gain_txt
                text: str(int(gain_slider.value))
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                disabled: True
                multiline: False
                value: 3
            Button:
                id: gain_up
                text:'Up'
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                disabled: True
                on_release: root.gainUp_press()
            Button:
                id: gain_down
                text:'Down'
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                disabled: True
                on_release: root.gainDown_press()
            Button: 
                id: gain_auto
                text: 'Auto ON'
                opacity: 0.5
                font_size: '25dp'
                color: 1, 0, 0, 1 #red
                # on_active: root.autoGain_click(self, self.active) 
                on_press: root.autoGain_click(self)
            #Label:
            #    text_size: None, None
            #    text_size: self.size
            #    font_size: '25dp'
            #    pos_hint: {'center_y': 0.90}
            #    size: self.texture_size
            #    color: 1, 0, 0, 1 #red
            #    text: 'Auto'
        BoxLayout:
            orientation: 'horizontal'
            Slider:
                id: gain_slider
                disabled: True
                min: 1
                max: 100
                step: 1
                value: 3
                orientation: 'horizontal'
                # on_value:label2.text = str(int(self.value))
                on_value: root.updateGainSlider(self, self.value)     

        BoxLayout:
            orientation: 'horizontal'
            ActionButton:
                text: 'Back to menu'
                icon: 'left_red.png'
                size_hint: 0.7, 0.7
                on_release: root.backToCamera_release()
            BoxLayout:
                orientation: 'horizontal'
            ActionButton:
                text: 'My settings button'
                icon: 'right_red.png'
                size_hint: 0.7, 0.7